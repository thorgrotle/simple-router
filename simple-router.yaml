---
# This ansible cookbook will setup full routerstack which consist of:
# Base ubuntu installer: 
# Software Install: ISC-DHCP-Server, Bind9, FirewallD, NTPD, Vlan, bridge-utils, Wireguard, Cockpit, Nano, neofetch, unattended-upgrades
# Software removal: UFW
# Setup Network: Netplan
# Setup ISC-DHCP-Server
# Setup FirewallD + Vlans
# Setup NTPD
# Setup Bind9 DNS
# Setup Wireguard 


# LINK: https://docs.google.com/document/d/1H9k0OmNg4hu56rrRG1ByQGwBKLNvZfPwkRpv3Ihqecs/edit


#name: Simple Router Complete installer
- hosts: 10.0.75.161
  become: yes
  become_method: sudo
  vars:
    INTERNET_NIC: enp1s0
    BRIDGE_NIC: enx00249b5100e0
    HOST_NAME: rey

    #
    VLAN1: 1
    VLAN1NAME: Primary
    VLAN1DHCP_IP: 10.0.24.1
    VLAN1SUBNET: 10.0.24.0
    VLAN1DHCP_RANGE: "10.0.24.30 10.0.24.200"
    VLAN1DNS_DOMAIN: primary.lan
    VLAN1DNS_INTERNAL: 10.0.24.1
    VLAN1DNS_EXTERNAL1: 1.1.1.1
    VLAN1DNS_EXTERNAL2: 8.8.8.8
    VLAN1DNS_ROUTER: 10.0.24.1
    VLAN1SERVICES: "DNS SSH"
    #
    VLAN2: 25
    VLAN2NAME: Guest
    VLAN2DHCP_IP: 10.0.25.1
    VLAN2SUBNET: 10.0.25.0
    VLAN2DHCP_RANGE: "10.0.25.10 10.0.25.100"
    VLAN2DNS_DOMAIN: guest.lan
    VLAN2DNS_INTERNAL: 8.8.8.8
    VLAN2DNS_EXTERNAL1: 8.8.8.8
    VLAN2DNS_EXTERNAL2: 8.8.8.8
    VLAN2DNS_ROUTER: 10.0.25.1
    VLAN2SERVICES:
    #

    VLAN3: 26
    VLAN3NAME: IoT
    VLAN3DHCP_IP: 10.0.26.1
    VLAN3SUBNET: 10.0.26.0
    VLAN3DHCP_RANGE: "10.0.26.10 10.0.26.100"
    VLAN3DNS_DOMAIN: IoT.lan
    VLAN3DNS_INTERNAL: 8.8.8.8
    VLAN3DNS_EXTERNAL1: 8.8.8.8
    VLAN3DNS_EXTERNAL2: 8.8.8.8
    VLAN3DNS_ROUTER: 10.0.27.1
    VLAN3SERVICES:
    #


    VLAN4: 27
    VLAN4NAME: Plex
    VLAN4DHCP_IP: 10.0.27.1
    VLAN4SUBNET: 10.0.27.0
    VLAN4DHCP_RANGE: "10.0.27.10 10.0.27.15"
    VLAN4DNS_DOMAIN: plex.lan
    VLAN4DNS_INTERNAL: 8.8.8.8
    VLAN4DNS_EXTERNAL1: 8.8.8.8
    VLAN4DNS_EXTERNAL2: 8.8.8.8
    VLAN4DNS_ROUTER: 10.0.27.1
    VLAN4SERVICES:
    #
    VLAN5: 28
    VLAN5NAME: Management
    VLAN5DHCP_IP: 10.0.28.1
    VLAN5SUBNET: 10.0.28.0
    VLAN5DHCP_RANGE: "10.0.28.10 10.0.28.100"
    VLAN5DNS_DOMAIN: management.lan
    VLAN5DNS_INTERNAL: 8.8.8.8
    VLAN5DNS_EXTERNAL1: 8.8.8.8
    VLAN5DNS_EXTERNAL2: 8.8.8.8
    VLAN5DNS_ROUTER: 10.0.28.1
    VLAN5SERVICES:
    #


    NTPD_SERVERIP: 80
    NTPD_EXTERNALSERVER1: "pool 0.ubuntu.pool.ntp.org iburst"
    NTPD_EXTERNALSERVER2: "pool 1.ubuntu.pool.ntp.org iburst"
    NTPD_EXTERNALSERVER3: "pool 2.ubuntu.pool.ntp.org iburst"
    NTPD_EXTERNALSERVER4: "pool 3.ubuntu.pool.ntp.org iburst"
#
#    COCKPIT_ACCESSIP: 
#
#    WIREGUARD_CON_NAME: 80
#    WIREGUARD_IP: 80
#    WIREGUARD_PORT: 80
#    WIREGUARD_VLAN: 80
#    WIREGUARD_GENPRIVATEKEY: NO
#    WIREGUARD_PRIVATEKEY: 80
#    WIREGUARD_ALLOWEDNET: 80


  tasks:
    #- name: Run the equivalent of "apt update" as a separate step

    - name: APT update
      ansible.builtin.apt:
        update_cache: true

    - name: "update hostnames"
      hostname:
        name: "{{ HOST_NAME }}"

    #- Install applications needed for router
    - name: Install a list of packages
      ansible.builtin.apt:
        pkg:
        - vlan
        - bridge-utils
        - firewalld
        - isc-dhcp-server
        - ntp
        - bind9
        - wireguard
        - unattended-upgrades
        - cockpit
        - nano
        - wireguard
        - qrencode
        - neofetch
        - traceroute
        - openvswitch-switch-dpdk

    - name: Remove UFW
      ansible.builtin.apt:
        name: ufw
        state: absent


#    - name: Install a list of for VM
#      ansible.builtin.apt:
#        pkg:
#        - openvswitch-switch-dpdk
    

    - name: Copy bind/rndc.key to dhcp/rndc.key
      ansible.builtin.copy:
        remote_src: true
        src: /etc/bind/rndc.key
        dest: /etc/dhcp/rndc.key
        owner: root
        group: root
        mode: '0640'

    - name: write dhcpd config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: dhcpd.j2
        dest: /etc/dhcp/dhcpd.conf

    - name: write default/isc-dhcp-server for DHCP access to all networks
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: default-isc-dhcp-server.j2
        dest: /etc/default/isc-dhcp-server



    - name: write netplan config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0600
        owner: root
        group: root
        src: netplan-00-installer-config.j2
        dest: /etc/netplan/00-installer-config.yaml




  # enable port forward in ipstack
    - name: Enabling routing in sysctl.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv4.ip_forward = 1"

    - name: Disable ipv6 routing in sysctl.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv6.conf.all.disable_ipv6 = 1"

    - name: Disable ipv6 in sysctl.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv6.conf.default.disable_ipv6 = 1"
 
    - name: enable vlan kernal module
      ansible.builtin.lineinfile:
        path: /etc/modules
        line: "8021q"
  

# Firewall zone files:
    - name: write firewalld-zone public config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-public.j2
        dest: /etc/firewalld/zones/public.xml

    - name: write firewalld-zone primary config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-primary.j2
        dest: /etc/firewalld/zones/primary.xml

    - name: write firewalld-zone Guest config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-guest.j2
        dest: /etc/firewalld/zones/guest.xml

    - name: write firewalld-zone IoT config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-IoT.j2
        dest: /etc/firewalld/zones/IoT.xml

    - name: write firewalld-zone plex config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-plex.j2
        dest: /etc/firewalld/zones/plex.xml

    - name: write firewalld-zone Management config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-zone-management.j2
        dest: /etc/firewalld/zones/management.xml

# Firewall policy files:
    - name: write firewalld-policies for internet access config using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: firewalld-policies-internet-access.j2
        dest: /etc/firewalld/policies/internet-access.xml

# Bind9 DNS Server configs
    - name: write bind/named.conf using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: bind.named.conf.j2
        dest: /etc/bind/named.conf


    - name: write bind/named.conf.options using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: bind.named.conf.local.j2
        dest: /etc/bind/named.conf.local

    - name: write bind/named.conf.options using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: bind.named.conf.options.j2
        dest: /etc/bind/named.conf.options

    - name: write bind/primary.db using jinja2
      ansible.builtin.template:
        backup: true
        mode: 0644
        owner: root
        group: root
        src: bind.primary.db.j2
        dest: /etc/bind/{{ VLAN1DNS_DOMAIN }}




#    - name: write firewalld-policies for IoT access config using jinja2
#      ansible.builtin.template:
#        backup: true
#        mode: 0644
#        owner: root
#        group: root
#        src: firewalld-policies-link-iot-primary.j2
#        dest: /etc/firewalld/policies/IoT-Access.xml

#    - name: write firewalld-policies for Plex access config using jinja2
#      ansible.builtin.template:
#        backup: true
#        mode: 0644
#        owner: root
#        group: root
#        src: firewalld-policies-link-plex-primary.j2
#        dest: /etc/firewalld/policies/Plex-access.xml



# Point to public zone as default
#    - name: Set default zone
#      ansible.builtin.lineinfile:
#        path: /etc/firewalld/firewalld.conf
#        line: "DefaultZone=Internet0"

 







# Variables


# ISC-DHCP-Server, Bind9, FirewallD, NTPD, Vlan, bridge-utils, Wireguard, Cockpit, Nano, neofetch, unattended-upgrades


# REMOVE UFW




# Copy in template files from JINJA2 - CREATE FOLDERS Set permissions
#  - /etc/sysctl.conf
#  - /etc/modules
#  - /etc/netplan/00-installer-config.yaml
#  - /etc/firewalld/firewalld.conf
#  - /etc/firewalld/zones/work.xml
#  - /etc/firewalld/zones/public.xml
#  - /etc/firewalld/policies/internet-access.xml
#  - /etc/bind/named.conf
#  - /etc/bind/named.conf.options
#  - /etc/bind/named.conf.local 
#  - /etc/bind/db.lan
#  - /etc/dhcp/dhcpd.conf
#  - /etc/default/isc-dhcp-server
#  - /etc/ntp/ntpd.conf
#  - /etc/cockpit/cockpit.conf
#  - /etc/wireguard/wg0.conf 
#  - /etc/apt/apt.conf.d/50unattended-upgrades
#  - /etc/apt/apt.conf.d/10periodic

